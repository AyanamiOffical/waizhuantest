import{b1 as o,ap as t,cu as n}from"./bootstrap-C83mKH3e.js";import"./form-ClcOlmjz.js";import{s as a}from"./use-vben-form-DZ0hU62q.js";import{k as l}from"../jse/index-index-GzxSC5Ev.js";import r from"./index-BPwIrRfc.js";const f=s=>o.post("/sys-api/task/list",s),k=s=>o.post("/sys-api/task/create",s),m=s=>o.post("/sys-api/task/update",s),y=s=>o.post("/sys-api/task/delete",s),b={columns:[{type:"checkbox",width:60},{title:t("sys.task.name"),field:"name"},{title:t("sys.task.taskGroup"),field:"taskGroup"},{title:t("sys.task.cronExpression"),field:"cronExpression"},{title:t("sys.task.pattern"),field:"pattern"},{title:t("sys.task.payload"),field:"payload"},{title:t("common.status"),field:"status",slots:{default:s=>l(r,{checked:s.row.status===1,onClick:()=>{const e=s.row.status===1?2:1;m({id:s.row.id,status:e}).then(()=>{s.row.status=e})}})}},{title:t("common.createTime"),field:"createdAt",formatter:"formatDateTime"}]},h={schema:[{fieldName:"name",label:t("sys.task.name"),component:"Input"},{fieldName:"taskGroup",label:t("sys.task.taskGroup"),component:"Input"}]},g={schema:[{fieldName:"id",label:"ID",component:"Input",dependencies:{show:!1,triggerFields:["id"]}},{fieldName:"name",label:t("sys.task.name"),component:"Input",rules:a().max(50)},{fieldName:"taskGroup",label:t("sys.task.taskGroup"),component:"Input",rules:a().max(40)},{fieldName:"cronExpression",label:t("sys.task.cronExpression"),component:"Input",rules:a().max(80)},{fieldName:"pattern",label:t("sys.task.pattern"),component:"Input",rules:a().max(100)},{fieldName:"payload",label:t("sys.task.payload"),component:"Input"},{fieldName:"status",label:t("sys.task.status"),component:"RadioButtonGroup",defaultValue:1,componentProps:{options:[{label:t("common.on"),value:1},{label:t("common.off"),value:2}]}}]},w={columns:[{type:"checkbox",width:60},{title:t("sys.taskLog.startedAt"),field:"startedAt",formatter:"formatDateTime"},{title:t("sys.taskLog.finishedAt"),field:"finishedAt",formatter:"formatDateTime"},{title:t("sys.taskLog.result"),field:"result",width:70,slots:{default:s=>{let e="";return e=s.row.result===1?t("common.successful"):t("common.failed"),l(n,{color:s.row.result===1?"green":"red"},()=>e)}}}]},x={schema:[{fieldName:"result",label:t("sys.taskLog.result"),component:"Select",defaultValue:0,componentProps:{options:[{label:t("common.all"),value:0},{label:t("common.successful"),value:1},{label:t("common.failed"),value:2}]}}]};export{y as a,w as b,k as c,g as d,x as e,f as g,h as s,b as t,m as u};
